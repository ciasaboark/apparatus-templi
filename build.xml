<project name="ApparatusTempli" default="dist" basedir=".">
    <description>
        Home automation.
    </description>
    <!-- set global properties for this build -->
    <property name="project-dir"    value="coordinator_eclipse_workspace/Coordinator/" />
    <property name="src"            location="coordinator_eclipse_workspace/Coordinator/src"/>
    <property name="build"          location="coordinator_eclipse_workspace/Coordinator/build"/>
    <property name="dist"           location="coordinator_eclipse_workspace/Coordinator/dist"/>
    <property name="tests"          location="coordinator_eclipse_workspace/Coordinator/tests" />
    <property name="major-version-number" value="0" />
    <property name="minor-version-number" value="5" />
    <property name="project-name" value="${ant.project.name}" />
    <!-- <property file="../ant-utilities/build-main.properties" /> -->

    
    <target name="init">
        <!-- Create the time stamp -->
        <tstamp/>
        <!-- Create the build directory structure used by compile -->
        <mkdir dir="${build}"/>
    </target>

    <target name="compile" depends="init" description="compile the source" >

        <!-- Compile the java code from ${src} into ${build} -->
        <javac srcdir="${src}" destdir="${build}" includeantruntime="false">
            <classpath>
                <pathelement path="${classpath}"/>
                <fileset dir="${project-dir}/lib">
                    <include name="**/*.jar"/>
                </fileset>
                <pathelement location="classes"/>
            </classpath>
        </javac>
    </target>

    <target name="compile-tests" depends="init,compile" description="compile the junit tests source" >
        <!-- Compile the java code from ${src} into ${build} -->
        <javac srcdir="${tests}" destdir="${build}" includeantruntime="false">
            <classpath>
                <pathelement path="${classpath}"/>
                <fileset dir="${project-dir}/lib">
                    <include name="**/*.jar"/>
                </fileset>
                <pathelement location="classes"/>
            </classpath>
        </javac>
    </target>

    <target name="dist" depends="compile" description="generate the distribution" >
        <!-- Create the distribution directory -->
        <mkdir dir="${dist}/${major-version-number}-${minor-version-number}"/>

        <!-- Put everything in ${build} into the MyProject-${DSTAMP}.jar file -->
        <jar jarfile="${dist}/${major-version-number}-${minor-version-number}/Coordinator-${DSTAMP}.jar" basedir="${build}"/>
    </target>

    <target name="clean" description="clean up" >
        <!-- Delete the ${build} and ${dist} directory trees -->
        <delete dir="${build}"/>
        <delete dir="${dist}"/>
    </target>

    <target name="test" depends="compile-tests, test-headless" >
        <mkdir dir="${build}/test-files/" />
        <copy file="./website/xml/module-schema.xsd" todir="${build}/test-files" />
        <copy file="./website/xml/driver-list-schema.xsd" todir="${build}/test-files" />
        <junit fork="yes" haltonfailure="no" failureproperty="test.failed">
            <jvmarg value="-Duser.dir=${build}"/>
            <classpath>
                <pathelement path="${build}" />
                <pathelement path="${classpath}"/>
                <fileset dir="${project-dir}/lib">
                    <include name="**/*.jar"/>
                </fileset>
                <pathelement location="classes"/>
            </classpath>  
            <batchtest>
               <fileset dir="${tests}">
                    <include  name="**/*Test*" />
                    <exclude name="**/HeadlessTest*" />
               </fileset>
            </batchtest>
            <formatter type="brief" usefile="false"/>
        </junit>
        <fail message="Test failure detected, check test results." if="test.failed" />
    </target>


    <target name="test-headless">
        <junit haltonfailure="no" failureproperty="test.failed">
            <jvmarg value="-Djava.awt.headless=true" />
            <classpath>
                <pathelement path="${build}" />
                <pathelement path="${classpath}"/>
                <fileset dir="${project-dir}/lib">
                    <include name="**/*.jar"/>
                </fileset>
                <pathelement location="classes"/>
            </classpath>  
            <batchtest>
               <fileset dir="${tests}">
                    <include name="**/HeadlessTest*" />
               </fileset>
            </batchtest>
            <formatter type="brief" usefile="false"/>
        </junit>
        <fail message="Test failure detected, check test results." if="test.failed" />
    </target>

    

</project>